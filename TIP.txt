In model relationships, use the value joined for the attribute lazy and get LEFT OUTER JOIN in your related queries!
NOTE:
The rubric requires JOIN in two points only:

On the Venue page ( @app.route('/venues/‘<int:venue_id>) ):

The code joins tables from existing models to select Artists by Venues where they previously performed, successfully filling out the Venues page with a “Past Performances” section.

On the Artist page ( @app.route('/artists/‘<int:artist_id>) ):

The code joins tables from existing models to successfully fill out the Artists page with a “Venues Performed” section.

For example:

If you use lazy = True, using venue.shows will generate separate queries without JOINs.

First, you must configure the model relationships in the correct way using the joined value for thelazy attribute, and thus obtain the LEFT OUTER JOIN statement:

Venues model:

shows = db.relationship('Show', backref=db.backref('venue'), lazy="joined")
Artist model:

shows = db.relationship('Show', backref=db.backref('artist'), lazy="joined")
Now, your query venue.shows, for example, will produce something like this:

SELECT 
    shows.id,
    ...,
    artists.id,
    ...,
    venues.id,
    ...,
    ...
    FROM shows
    LEFT OUTER JOIN artists
        ON artists.id = shows.artist_id
    LEFT OUTER JOIN venues 
        ON venues.id = shows.venue_id